generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  email          String   @unique
  displayName    String
  photoURL       String
  role           String
  badge          String
  creationTime   DateTime @default(now())
  lastSignInTime DateTime @default(now())
  // @updatedAt

  @@map("users") // maps to MongoDB collection
}

model Meal {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  category         String
  image            String
  description      String
  ingredients      String[]
  rating           Float
  price            Int
  likes            Int?
  distributerName  String
  distributerEmail String
  postTime         DateTime @default(now())

  // ðŸ‘‡ One Meal can have many Ratings
  reviews Review[] @relation("MealReviews")

  @@map("meals")
}

model Likes {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  mealId    String
  userName  String
  userEmail String

  @@map("likes")
}

model Review {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  mealId             String @db.ObjectId
  mealTitle          String
  mealCategory       String
  rating             Float
  review             String
  reviewUserName     String
  reviewUserEmail    String
  reviewUserPhotoURL String

  // ðŸ‘‡ Each Review belongs to a Meal
  meal Meal @relation("MealReviews", fields: [mealId], references: [id])
  // @@unique([mealId, reviewUserEmail]) // ðŸ‘ˆ important

  @@map("reviews")
}
